version: "3"

services:
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: bookstore-nginx:v1.0.0
    container_name: bookstore-nginx
    hostname: bookstore-nginx
    volumes:
      - ./client/dist:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d/
    ports:
      - 80:80
    tty: true
    stdin_open: true
    depends_on:
      - client

  client:
    build:
      context: client
      dockerfile: Dockerfile
    image: bookstore-client:v1.0.0
    container_name: bookstore-client
    hostname: bookstore-client
    working_dir: /app
    volumes:
      - ./client:/app
      - /app/node_modules
    expose:
      - 3000
    command: sh -c "npm run build && npm run dev"
    tty: true
    stdin_open: true
    restart: always
    depends_on:
      - api

  api:
    build:
      context: api
      dockerfile: Dockerfile
    image: bookstore-api:v1.0.0
    container_name: bookstore-api
    hostname: bookstore-api
    working_dir: /app
    volumes:
      - ./api:/app
    ports:
      - 8000:8000
    command: go run main.go
    tty: true
    stdin_open: true
    depends_on:
      - db

  db:
    build:
      context: mariadb
      dockerfile: Dockerfile
    image: bookstore-db:v1.0.0
    container_name: bookstore-db
    hostname: bookstore-db
    ports:
      - 3306:3306
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mariadb/db:/var/lib/mysql
      - ./mariadb/log:/var/log/mysql
      - ./mariadb/initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=passw0rd
      - MYSQL_USER=book
      - MYSQL_PASSWORD=pass1234
      - MYSQL_DATABASE=books
      - TZ=Asia/Tokyo

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db